{"ast":null,"code":"import _slicedToArray from \"C:/Users/DimaP/Desktop/\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B/React_handmade/mypizza/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport useRafState from '../useRafState';\nimport useEventListener from '../useEventListener';\nimport { getTargetElement } from '../utils/domTarget';\nvar initState = {\n  screenX: NaN,\n  screenY: NaN,\n  clientX: NaN,\n  clientY: NaN,\n  pageX: NaN,\n  pageY: NaN,\n  elementX: NaN,\n  elementY: NaN,\n  elementH: NaN,\n  elementW: NaN,\n  elementPosX: NaN,\n  elementPosY: NaN\n};\nexport default (function (target) {\n  var _useRafState = useRafState(initState),\n    _useRafState2 = _slicedToArray(_useRafState, 2),\n    state = _useRafState2[0],\n    setState = _useRafState2[1];\n  useEventListener('mousemove', function (event) {\n    var screenX = event.screenX,\n      screenY = event.screenY,\n      clientX = event.clientX,\n      clientY = event.clientY,\n      pageX = event.pageX,\n      pageY = event.pageY;\n    var newState = {\n      screenX: screenX,\n      screenY: screenY,\n      clientX: clientX,\n      clientY: clientY,\n      pageX: pageX,\n      pageY: pageY,\n      elementX: NaN,\n      elementY: NaN,\n      elementH: NaN,\n      elementW: NaN,\n      elementPosX: NaN,\n      elementPosY: NaN\n    };\n    var targetElement = getTargetElement(target);\n    if (targetElement) {\n      var _targetElement$getBou = targetElement.getBoundingClientRect(),\n        left = _targetElement$getBou.left,\n        top = _targetElement$getBou.top,\n        width = _targetElement$getBou.width,\n        height = _targetElement$getBou.height;\n      newState.elementPosX = left + window.pageXOffset;\n      newState.elementPosY = top + window.pageYOffset;\n      newState.elementX = pageX - newState.elementPosX;\n      newState.elementY = pageY - newState.elementPosY;\n      newState.elementW = width;\n      newState.elementH = height;\n    }\n    setState(newState);\n  }, {\n    target: function target() {\n      return document;\n    }\n  });\n  return state;\n});","map":{"version":3,"names":["useRafState","useEventListener","getTargetElement","initState","screenX","NaN","screenY","clientX","clientY","pageX","pageY","elementX","elementY","elementH","elementW","elementPosX","elementPosY","target","state","setState","event","newState","targetElement","getBoundingClientRect","left","top","width","height","window","pageXOffset","pageYOffset","document"],"sources":["C:/Users/DimaP/Desktop/Проекты/React_handmade/mypizza/node_modules/ahooks/es/useMouse/index.js"],"sourcesContent":["import useRafState from '../useRafState';\nimport useEventListener from '../useEventListener';\nimport { getTargetElement } from '../utils/domTarget';\nconst initState = {\n  screenX: NaN,\n  screenY: NaN,\n  clientX: NaN,\n  clientY: NaN,\n  pageX: NaN,\n  pageY: NaN,\n  elementX: NaN,\n  elementY: NaN,\n  elementH: NaN,\n  elementW: NaN,\n  elementPosX: NaN,\n  elementPosY: NaN\n};\nexport default (target => {\n  const [state, setState] = useRafState(initState);\n  useEventListener('mousemove', event => {\n    const {\n      screenX,\n      screenY,\n      clientX,\n      clientY,\n      pageX,\n      pageY\n    } = event;\n    const newState = {\n      screenX,\n      screenY,\n      clientX,\n      clientY,\n      pageX,\n      pageY,\n      elementX: NaN,\n      elementY: NaN,\n      elementH: NaN,\n      elementW: NaN,\n      elementPosX: NaN,\n      elementPosY: NaN\n    };\n    const targetElement = getTargetElement(target);\n    if (targetElement) {\n      const {\n        left,\n        top,\n        width,\n        height\n      } = targetElement.getBoundingClientRect();\n      newState.elementPosX = left + window.pageXOffset;\n      newState.elementPosY = top + window.pageYOffset;\n      newState.elementX = pageX - newState.elementPosX;\n      newState.elementY = pageY - newState.elementPosY;\n      newState.elementW = width;\n      newState.elementH = height;\n    }\n    setState(newState);\n  }, {\n    target: () => document\n  });\n  return state;\n});"],"mappings":";AAAA,OAAOA,WAAW,MAAM,gBAAgB;AACxC,OAAOC,gBAAgB,MAAM,qBAAqB;AAClD,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,IAAMC,SAAS,GAAG;EAChBC,OAAO,EAAEC,GAAG;EACZC,OAAO,EAAED,GAAG;EACZE,OAAO,EAAEF,GAAG;EACZG,OAAO,EAAEH,GAAG;EACZI,KAAK,EAAEJ,GAAG;EACVK,KAAK,EAAEL,GAAG;EACVM,QAAQ,EAAEN,GAAG;EACbO,QAAQ,EAAEP,GAAG;EACbQ,QAAQ,EAAER,GAAG;EACbS,QAAQ,EAAET,GAAG;EACbU,WAAW,EAAEV,GAAG;EAChBW,WAAW,EAAEX;AACf,CAAC;AACD,gBAAgB,UAAAY,MAAM,EAAI;EACxB,mBAA0BjB,WAAW,CAACG,SAAS,CAAC;IAAA;IAAzCe,KAAK;IAAEC,QAAQ;EACtBlB,gBAAgB,CAAC,WAAW,EAAE,UAAAmB,KAAK,EAAI;IACrC,IACEhB,OAAO,GAMLgB,KAAK,CANPhB,OAAO;MACPE,OAAO,GAKLc,KAAK,CALPd,OAAO;MACPC,OAAO,GAILa,KAAK,CAJPb,OAAO;MACPC,OAAO,GAGLY,KAAK,CAHPZ,OAAO;MACPC,KAAK,GAEHW,KAAK,CAFPX,KAAK;MACLC,KAAK,GACHU,KAAK,CADPV,KAAK;IAEP,IAAMW,QAAQ,GAAG;MACfjB,OAAO,EAAPA,OAAO;MACPE,OAAO,EAAPA,OAAO;MACPC,OAAO,EAAPA,OAAO;MACPC,OAAO,EAAPA,OAAO;MACPC,KAAK,EAALA,KAAK;MACLC,KAAK,EAALA,KAAK;MACLC,QAAQ,EAAEN,GAAG;MACbO,QAAQ,EAAEP,GAAG;MACbQ,QAAQ,EAAER,GAAG;MACbS,QAAQ,EAAET,GAAG;MACbU,WAAW,EAAEV,GAAG;MAChBW,WAAW,EAAEX;IACf,CAAC;IACD,IAAMiB,aAAa,GAAGpB,gBAAgB,CAACe,MAAM,CAAC;IAC9C,IAAIK,aAAa,EAAE;MACjB,4BAKIA,aAAa,CAACC,qBAAqB,EAAE;QAJvCC,IAAI,yBAAJA,IAAI;QACJC,GAAG,yBAAHA,GAAG;QACHC,KAAK,yBAALA,KAAK;QACLC,MAAM,yBAANA,MAAM;MAERN,QAAQ,CAACN,WAAW,GAAGS,IAAI,GAAGI,MAAM,CAACC,WAAW;MAChDR,QAAQ,CAACL,WAAW,GAAGS,GAAG,GAAGG,MAAM,CAACE,WAAW;MAC/CT,QAAQ,CAACV,QAAQ,GAAGF,KAAK,GAAGY,QAAQ,CAACN,WAAW;MAChDM,QAAQ,CAACT,QAAQ,GAAGF,KAAK,GAAGW,QAAQ,CAACL,WAAW;MAChDK,QAAQ,CAACP,QAAQ,GAAGY,KAAK;MACzBL,QAAQ,CAACR,QAAQ,GAAGc,MAAM;IAC5B;IACAR,QAAQ,CAACE,QAAQ,CAAC;EACpB,CAAC,EAAE;IACDJ,MAAM,EAAE;MAAA,OAAMc,QAAQ;IAAA;EACxB,CAAC,CAAC;EACF,OAAOb,KAAK;AACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
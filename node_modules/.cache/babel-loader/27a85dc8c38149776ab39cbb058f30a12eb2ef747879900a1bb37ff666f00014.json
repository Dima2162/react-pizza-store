{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  totalPrice: 0,\n  items: []\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    // addItem(state, action) {\n    // \tstate.items.push(action.payload);\n    //   state.totalPrice = state.items.reduce((sum,obj)=>{\n    //     return obj.price +sum;\n    //   },0);\n    // },\n    addItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload.id);\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({\n          ...action.payload,\n          count: 1\n        });\n      }\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        return obj.price + sum;\n      }, 0);\n    },\n    removeItem(state, action) {\n      state.items = state.items.filter(obj => obj.id === action.payload);\n    },\n    clearItem(state) {\n      state.items = [];\n    }\n  }\n});\nexport const {\n  addItem,\n  removeItem,\n  clearItem\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","totalPrice","items","cartSlice","name","reducers","addItem","state","action","findItem","find","obj","id","payload","count","push","reduce","sum","price","removeItem","filter","clearItem","actions","reducer"],"sources":["C:/Users/DimaP/Desktop/Проекты/React_handmade/mypizza/src/redux/slice/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n\ttotalPrice: 0,\r\n\titems: [],\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n\tname: 'cart',\r\n\tinitialState,\r\n\treducers: {\r\n\t\t// addItem(state, action) {\r\n\t\t// \tstate.items.push(action.payload);\r\n    //   state.totalPrice = state.items.reduce((sum,obj)=>{\r\n    //     return obj.price +sum;\r\n    //   },0);\r\n\t\t// },\r\n    addItem(state, action) {\r\n\t\t\tconst findItem = state.items.find(obj => obj.id === action.payload.id)\r\n      if(findItem){\r\n      findItem.count++;\r\n      }else{\r\n        state.items.push({\r\n          ...action.payload,\r\n          count: 1\r\n        });\r\n      }\r\n      state.totalPrice = state.items.reduce((sum,obj)=>{\r\n            return obj.price +sum;\r\n          },0);\r\n\t\t},\r\n\t\tremoveItem(state, action) {\r\n\t\t\tstate.items = state.items.filter((obj) => obj.id === action.payload);\r\n\t\t},\r\n\t\tclearItem(state) {\r\n\t\t\tstate.items = [];\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { addItem, removeItem, clearItem } = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACpBC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE;AACR,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACT;IACA;IACE;IACA;IACA;IACF;IACEC,OAAO,CAACC,KAAK,EAAEC,MAAM,EAAE;MACxB,MAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAK,CAACQ,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MACnE,IAAGH,QAAQ,EAAC;QACZA,QAAQ,CAACK,KAAK,EAAE;MAChB,CAAC,MAAI;QACHP,KAAK,CAACL,KAAK,CAACa,IAAI,CAAC;UACf,GAAGP,MAAM,CAACK,OAAO;UACjBC,KAAK,EAAE;QACT,CAAC,CAAC;MACJ;MACAP,KAAK,CAACN,UAAU,GAAGM,KAAK,CAACL,KAAK,CAACc,MAAM,CAAC,CAACC,GAAG,EAACN,GAAG,KAAG;QAC3C,OAAOA,GAAG,CAACO,KAAK,GAAED,GAAG;MACvB,CAAC,EAAC,CAAC,CAAC;IACZ,CAAC;IACDE,UAAU,CAACZ,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACkB,MAAM,CAAET,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;IACrE,CAAC;IACDQ,SAAS,CAACd,KAAK,EAAE;MAChBA,KAAK,CAACL,KAAK,GAAG,EAAE;IACjB;EACD;AACD,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,OAAO;EAAEa,UAAU;EAAEE;AAAU,CAAC,GAAGlB,SAAS,CAACmB,OAAO;AACnE,eAAenB,SAAS,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
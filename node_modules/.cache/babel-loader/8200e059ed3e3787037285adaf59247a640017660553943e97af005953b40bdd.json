{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport useUnmount from '../../../useUnmount';\nimport limit from '../utils/limit';\nimport subscribeFocus from '../utils/subscribeFocus';\nvar useRefreshOnWindowFocusPlugin = function useRefreshOnWindowFocusPlugin(fetchInstance, _ref) {\n  var refreshOnWindowFocus = _ref.refreshOnWindowFocus,\n    _ref$focusTimespan = _ref.focusTimespan,\n    focusTimespan = _ref$focusTimespan === void 0 ? 5000 : _ref$focusTimespan;\n  var unsubscribeRef = useRef();\n  var stopSubscribe = function stopSubscribe() {\n    var _a;\n    (_a = unsubscribeRef.current) === null || _a === void 0 ? void 0 : _a.call(unsubscribeRef);\n  };\n  useEffect(function () {\n    if (refreshOnWindowFocus) {\n      var limitRefresh = limit(fetchInstance.refresh.bind(fetchInstance), focusTimespan);\n      unsubscribeRef.current = subscribeFocus(function () {\n        limitRefresh();\n      });\n    }\n    return function () {\n      stopSubscribe();\n    };\n  }, [refreshOnWindowFocus, focusTimespan]);\n  useUnmount(function () {\n    stopSubscribe();\n  });\n  return {};\n};\nexport default useRefreshOnWindowFocusPlugin;","map":{"version":3,"names":["useEffect","useRef","useUnmount","limit","subscribeFocus","useRefreshOnWindowFocusPlugin","fetchInstance","refreshOnWindowFocus","focusTimespan","unsubscribeRef","stopSubscribe","_a","current","call","limitRefresh","refresh","bind"],"sources":["C:/Users/DimaP/Desktop/Проекты/React_handmade/mypizza/node_modules/ahooks/es/useRequest/src/plugins/useRefreshOnWindowFocusPlugin.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport useUnmount from '../../../useUnmount';\nimport limit from '../utils/limit';\nimport subscribeFocus from '../utils/subscribeFocus';\nconst useRefreshOnWindowFocusPlugin = (fetchInstance, {\n  refreshOnWindowFocus,\n  focusTimespan = 5000\n}) => {\n  const unsubscribeRef = useRef();\n  const stopSubscribe = () => {\n    var _a;\n    (_a = unsubscribeRef.current) === null || _a === void 0 ? void 0 : _a.call(unsubscribeRef);\n  };\n  useEffect(() => {\n    if (refreshOnWindowFocus) {\n      const limitRefresh = limit(fetchInstance.refresh.bind(fetchInstance), focusTimespan);\n      unsubscribeRef.current = subscribeFocus(() => {\n        limitRefresh();\n      });\n    }\n    return () => {\n      stopSubscribe();\n    };\n  }, [refreshOnWindowFocus, focusTimespan]);\n  useUnmount(() => {\n    stopSubscribe();\n  });\n  return {};\n};\nexport default useRefreshOnWindowFocusPlugin;"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,cAAc,MAAM,yBAAyB;AACpD,IAAMC,6BAA6B,GAAG,SAAhCA,6BAA6B,CAAIC,aAAa,QAG9C;EAAA,IAFJC,oBAAoB,QAApBA,oBAAoB;IAAA,0BACpBC,aAAa;IAAbA,aAAa,mCAAG,IAAI;EAEpB,IAAMC,cAAc,GAAGR,MAAM,EAAE;EAC/B,IAAMS,aAAa,GAAG,SAAhBA,aAAa,GAAS;IAC1B,IAAIC,EAAE;IACN,CAACA,EAAE,GAAGF,cAAc,CAACG,OAAO,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACE,IAAI,CAACJ,cAAc,CAAC;EAC5F,CAAC;EACDT,SAAS,CAAC,YAAM;IACd,IAAIO,oBAAoB,EAAE;MACxB,IAAMO,YAAY,GAAGX,KAAK,CAACG,aAAa,CAACS,OAAO,CAACC,IAAI,CAACV,aAAa,CAAC,EAAEE,aAAa,CAAC;MACpFC,cAAc,CAACG,OAAO,GAAGR,cAAc,CAAC,YAAM;QAC5CU,YAAY,EAAE;MAChB,CAAC,CAAC;IACJ;IACA,OAAO,YAAM;MACXJ,aAAa,EAAE;IACjB,CAAC;EACH,CAAC,EAAE,CAACH,oBAAoB,EAAEC,aAAa,CAAC,CAAC;EACzCN,UAAU,CAAC,YAAM;IACfQ,aAAa,EAAE;EACjB,CAAC,CAAC;EACF,OAAO,CAAC,CAAC;AACX,CAAC;AACD,eAAeL,6BAA6B"},"metadata":{},"sourceType":"module","externalDependencies":[]}
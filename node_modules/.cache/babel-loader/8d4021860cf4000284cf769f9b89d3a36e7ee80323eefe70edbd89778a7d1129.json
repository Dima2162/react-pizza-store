{"ast":null,"code":"import _toConsumableArray from \"C:/Users/DimaP/Desktop/\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B/React_handmade/mypizza/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { __rest } from \"tslib\";\nimport useCreation from '../../useCreation';\nimport useLatest from '../../useLatest';\nimport useMemoizedFn from '../../useMemoizedFn';\nimport useMount from '../../useMount';\nimport useUnmount from '../../useUnmount';\nimport useUpdate from '../../useUpdate';\nimport Fetch from './Fetch';\nfunction useRequestImplement(service) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var plugins = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var _options$manual = options.manual,\n    manual = _options$manual === void 0 ? false : _options$manual,\n    rest = __rest(options, [\"manual\"]);\n  var fetchOptions = Object.assign({\n    manual: manual\n  }, rest);\n  var serviceRef = useLatest(service);\n  var update = useUpdate();\n  var fetchInstance = useCreation(function () {\n    var initState = plugins.map(function (p) {\n      var _a;\n      return (_a = p === null || p === void 0 ? void 0 : p.onInit) === null || _a === void 0 ? void 0 : _a.call(p, fetchOptions);\n    }).filter(Boolean);\n    return new Fetch(serviceRef, fetchOptions, update, Object.assign.apply(Object, [{}].concat(_toConsumableArray(initState))));\n  }, []);\n  fetchInstance.options = fetchOptions;\n  // run all plugins hooks\n  fetchInstance.pluginImpls = plugins.map(function (p) {\n    return p(fetchInstance, fetchOptions);\n  });\n  useMount(function () {\n    if (!manual) {\n      // useCachePlugin can set fetchInstance.state.params from cache when init\n      var params = fetchInstance.state.params || options.defaultParams || [];\n      // @ts-ignore\n      fetchInstance.run.apply(fetchInstance, _toConsumableArray(params));\n    }\n  });\n  useUnmount(function () {\n    fetchInstance.cancel();\n  });\n  return {\n    loading: fetchInstance.state.loading,\n    data: fetchInstance.state.data,\n    error: fetchInstance.state.error,\n    params: fetchInstance.state.params || [],\n    cancel: useMemoizedFn(fetchInstance.cancel.bind(fetchInstance)),\n    refresh: useMemoizedFn(fetchInstance.refresh.bind(fetchInstance)),\n    refreshAsync: useMemoizedFn(fetchInstance.refreshAsync.bind(fetchInstance)),\n    run: useMemoizedFn(fetchInstance.run.bind(fetchInstance)),\n    runAsync: useMemoizedFn(fetchInstance.runAsync.bind(fetchInstance)),\n    mutate: useMemoizedFn(fetchInstance.mutate.bind(fetchInstance))\n  };\n}\nexport default useRequestImplement;","map":{"version":3,"names":["__rest","useCreation","useLatest","useMemoizedFn","useMount","useUnmount","useUpdate","Fetch","useRequestImplement","service","options","plugins","manual","rest","fetchOptions","Object","assign","serviceRef","update","fetchInstance","initState","map","p","_a","onInit","call","filter","Boolean","pluginImpls","params","state","defaultParams","run","cancel","loading","data","error","bind","refresh","refreshAsync","runAsync","mutate"],"sources":["C:/Users/DimaP/Desktop/Проекты/React_handmade/mypizza/node_modules/ahooks/es/useRequest/src/useRequestImplement.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport useCreation from '../../useCreation';\nimport useLatest from '../../useLatest';\nimport useMemoizedFn from '../../useMemoizedFn';\nimport useMount from '../../useMount';\nimport useUnmount from '../../useUnmount';\nimport useUpdate from '../../useUpdate';\nimport Fetch from './Fetch';\nfunction useRequestImplement(service, options = {}, plugins = []) {\n  const {\n      manual = false\n    } = options,\n    rest = __rest(options, [\"manual\"]);\n  const fetchOptions = Object.assign({\n    manual\n  }, rest);\n  const serviceRef = useLatest(service);\n  const update = useUpdate();\n  const fetchInstance = useCreation(() => {\n    const initState = plugins.map(p => {\n      var _a;\n      return (_a = p === null || p === void 0 ? void 0 : p.onInit) === null || _a === void 0 ? void 0 : _a.call(p, fetchOptions);\n    }).filter(Boolean);\n    return new Fetch(serviceRef, fetchOptions, update, Object.assign({}, ...initState));\n  }, []);\n  fetchInstance.options = fetchOptions;\n  // run all plugins hooks\n  fetchInstance.pluginImpls = plugins.map(p => p(fetchInstance, fetchOptions));\n  useMount(() => {\n    if (!manual) {\n      // useCachePlugin can set fetchInstance.state.params from cache when init\n      const params = fetchInstance.state.params || options.defaultParams || [];\n      // @ts-ignore\n      fetchInstance.run(...params);\n    }\n  });\n  useUnmount(() => {\n    fetchInstance.cancel();\n  });\n  return {\n    loading: fetchInstance.state.loading,\n    data: fetchInstance.state.data,\n    error: fetchInstance.state.error,\n    params: fetchInstance.state.params || [],\n    cancel: useMemoizedFn(fetchInstance.cancel.bind(fetchInstance)),\n    refresh: useMemoizedFn(fetchInstance.refresh.bind(fetchInstance)),\n    refreshAsync: useMemoizedFn(fetchInstance.refreshAsync.bind(fetchInstance)),\n    run: useMemoizedFn(fetchInstance.run.bind(fetchInstance)),\n    runAsync: useMemoizedFn(fetchInstance.runAsync.bind(fetchInstance)),\n    mutate: useMemoizedFn(fetchInstance.mutate.bind(fetchInstance))\n  };\n}\nexport default useRequestImplement;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
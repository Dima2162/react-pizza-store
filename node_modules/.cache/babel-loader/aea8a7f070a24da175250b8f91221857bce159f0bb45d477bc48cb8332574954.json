{"ast":null,"code":"import _toConsumableArray from \"C:/Users/DimaP/Desktop/\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B/React_handmade/mypizza/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { useRef } from 'react';\nimport useCreation from '../../../useCreation';\nimport useUnmount from '../../../useUnmount';\nimport * as cache from '../utils/cache';\nimport * as cachePromise from '../utils/cachePromise';\nimport * as cacheSubscribe from '../utils/cacheSubscribe';\nvar useCachePlugin = function useCachePlugin(fetchInstance, _ref) {\n  var cacheKey = _ref.cacheKey,\n    _ref$cacheTime = _ref.cacheTime,\n    cacheTime = _ref$cacheTime === void 0 ? 5 * 60 * 1000 : _ref$cacheTime,\n    _ref$staleTime = _ref.staleTime,\n    staleTime = _ref$staleTime === void 0 ? 0 : _ref$staleTime,\n    customSetCache = _ref.setCache,\n    customGetCache = _ref.getCache;\n  var unSubscribeRef = useRef();\n  var currentPromiseRef = useRef();\n  var _setCache = function _setCache(key, cachedData) {\n    if (customSetCache) {\n      customSetCache(cachedData);\n    } else {\n      cache.setCache(key, cacheTime, cachedData);\n    }\n    cacheSubscribe.trigger(key, cachedData.data);\n  };\n  var _getCache = function _getCache(key) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    if (customGetCache) {\n      return customGetCache(params);\n    }\n    return cache.getCache(key);\n  };\n  useCreation(function () {\n    if (!cacheKey) {\n      return;\n    }\n    // get data from cache when init\n    var cacheData = _getCache(cacheKey);\n    if (cacheData && Object.hasOwnProperty.call(cacheData, 'data')) {\n      fetchInstance.state.data = cacheData.data;\n      fetchInstance.state.params = cacheData.params;\n      if (staleTime === -1 || new Date().getTime() - cacheData.time <= staleTime) {\n        fetchInstance.state.loading = false;\n      }\n    }\n    // subscribe same cachekey update, trigger update\n    unSubscribeRef.current = cacheSubscribe.subscribe(cacheKey, function (data) {\n      fetchInstance.setState({\n        data: data\n      });\n    });\n  }, []);\n  useUnmount(function () {\n    var _a;\n    (_a = unSubscribeRef.current) === null || _a === void 0 ? void 0 : _a.call(unSubscribeRef);\n  });\n  if (!cacheKey) {\n    return {};\n  }\n  return {\n    onBefore: function onBefore(params) {\n      var cacheData = _getCache(cacheKey, params);\n      if (!cacheData || !Object.hasOwnProperty.call(cacheData, 'data')) {\n        return {};\n      }\n      // If the data is fresh, stop request\n      if (staleTime === -1 || new Date().getTime() - cacheData.time <= staleTime) {\n        return {\n          loading: false,\n          data: cacheData === null || cacheData === void 0 ? void 0 : cacheData.data,\n          error: undefined,\n          returnNow: true\n        };\n      } else {\n        // If the data is stale, return data, and request continue\n        return {\n          data: cacheData === null || cacheData === void 0 ? void 0 : cacheData.data,\n          error: undefined\n        };\n      }\n    },\n    onRequest: function onRequest(service, args) {\n      var servicePromise = cachePromise.getCachePromise(cacheKey);\n      // If has servicePromise, and is not trigger by self, then use it\n      if (servicePromise && servicePromise !== currentPromiseRef.current) {\n        return {\n          servicePromise: servicePromise\n        };\n      }\n      servicePromise = service.apply(void 0, _toConsumableArray(args));\n      currentPromiseRef.current = servicePromise;\n      cachePromise.setCachePromise(cacheKey, servicePromise);\n      return {\n        servicePromise: servicePromise\n      };\n    },\n    onSuccess: function onSuccess(data, params) {\n      var _a;\n      if (cacheKey) {\n        // cancel subscribe, avoid trgger self\n        (_a = unSubscribeRef.current) === null || _a === void 0 ? void 0 : _a.call(unSubscribeRef);\n        _setCache(cacheKey, {\n          data: data,\n          params: params,\n          time: new Date().getTime()\n        });\n        // resubscribe\n        unSubscribeRef.current = cacheSubscribe.subscribe(cacheKey, function (d) {\n          fetchInstance.setState({\n            data: d\n          });\n        });\n      }\n    },\n    onMutate: function onMutate(data) {\n      var _a;\n      if (cacheKey) {\n        // cancel subscribe, avoid trigger self\n        (_a = unSubscribeRef.current) === null || _a === void 0 ? void 0 : _a.call(unSubscribeRef);\n        _setCache(cacheKey, {\n          data: data,\n          params: fetchInstance.state.params,\n          time: new Date().getTime()\n        });\n        // resubscribe\n        unSubscribeRef.current = cacheSubscribe.subscribe(cacheKey, function (d) {\n          fetchInstance.setState({\n            data: d\n          });\n        });\n      }\n    }\n  };\n};\nexport default useCachePlugin;","map":{"version":3,"names":["useRef","useCreation","useUnmount","cache","cachePromise","cacheSubscribe","useCachePlugin","fetchInstance","cacheKey","cacheTime","staleTime","customSetCache","setCache","customGetCache","getCache","unSubscribeRef","currentPromiseRef","_setCache","key","cachedData","trigger","data","_getCache","params","cacheData","Object","hasOwnProperty","call","state","Date","getTime","time","loading","current","subscribe","setState","_a","onBefore","error","undefined","returnNow","onRequest","service","args","servicePromise","getCachePromise","setCachePromise","onSuccess","d","onMutate"],"sources":["C:/Users/DimaP/Desktop/Проекты/React_handmade/mypizza/node_modules/ahooks/es/useRequest/src/plugins/useCachePlugin.js"],"sourcesContent":["import { useRef } from 'react';\nimport useCreation from '../../../useCreation';\nimport useUnmount from '../../../useUnmount';\nimport * as cache from '../utils/cache';\nimport * as cachePromise from '../utils/cachePromise';\nimport * as cacheSubscribe from '../utils/cacheSubscribe';\nconst useCachePlugin = (fetchInstance, {\n  cacheKey,\n  cacheTime = 5 * 60 * 1000,\n  staleTime = 0,\n  setCache: customSetCache,\n  getCache: customGetCache\n}) => {\n  const unSubscribeRef = useRef();\n  const currentPromiseRef = useRef();\n  const _setCache = (key, cachedData) => {\n    if (customSetCache) {\n      customSetCache(cachedData);\n    } else {\n      cache.setCache(key, cacheTime, cachedData);\n    }\n    cacheSubscribe.trigger(key, cachedData.data);\n  };\n  const _getCache = (key, params = []) => {\n    if (customGetCache) {\n      return customGetCache(params);\n    }\n    return cache.getCache(key);\n  };\n  useCreation(() => {\n    if (!cacheKey) {\n      return;\n    }\n    // get data from cache when init\n    const cacheData = _getCache(cacheKey);\n    if (cacheData && Object.hasOwnProperty.call(cacheData, 'data')) {\n      fetchInstance.state.data = cacheData.data;\n      fetchInstance.state.params = cacheData.params;\n      if (staleTime === -1 || new Date().getTime() - cacheData.time <= staleTime) {\n        fetchInstance.state.loading = false;\n      }\n    }\n    // subscribe same cachekey update, trigger update\n    unSubscribeRef.current = cacheSubscribe.subscribe(cacheKey, data => {\n      fetchInstance.setState({\n        data\n      });\n    });\n  }, []);\n  useUnmount(() => {\n    var _a;\n    (_a = unSubscribeRef.current) === null || _a === void 0 ? void 0 : _a.call(unSubscribeRef);\n  });\n  if (!cacheKey) {\n    return {};\n  }\n  return {\n    onBefore: params => {\n      const cacheData = _getCache(cacheKey, params);\n      if (!cacheData || !Object.hasOwnProperty.call(cacheData, 'data')) {\n        return {};\n      }\n      // If the data is fresh, stop request\n      if (staleTime === -1 || new Date().getTime() - cacheData.time <= staleTime) {\n        return {\n          loading: false,\n          data: cacheData === null || cacheData === void 0 ? void 0 : cacheData.data,\n          error: undefined,\n          returnNow: true\n        };\n      } else {\n        // If the data is stale, return data, and request continue\n        return {\n          data: cacheData === null || cacheData === void 0 ? void 0 : cacheData.data,\n          error: undefined\n        };\n      }\n    },\n    onRequest: (service, args) => {\n      let servicePromise = cachePromise.getCachePromise(cacheKey);\n      // If has servicePromise, and is not trigger by self, then use it\n      if (servicePromise && servicePromise !== currentPromiseRef.current) {\n        return {\n          servicePromise\n        };\n      }\n      servicePromise = service(...args);\n      currentPromiseRef.current = servicePromise;\n      cachePromise.setCachePromise(cacheKey, servicePromise);\n      return {\n        servicePromise\n      };\n    },\n    onSuccess: (data, params) => {\n      var _a;\n      if (cacheKey) {\n        // cancel subscribe, avoid trgger self\n        (_a = unSubscribeRef.current) === null || _a === void 0 ? void 0 : _a.call(unSubscribeRef);\n        _setCache(cacheKey, {\n          data,\n          params,\n          time: new Date().getTime()\n        });\n        // resubscribe\n        unSubscribeRef.current = cacheSubscribe.subscribe(cacheKey, d => {\n          fetchInstance.setState({\n            data: d\n          });\n        });\n      }\n    },\n    onMutate: data => {\n      var _a;\n      if (cacheKey) {\n        // cancel subscribe, avoid trigger self\n        (_a = unSubscribeRef.current) === null || _a === void 0 ? void 0 : _a.call(unSubscribeRef);\n        _setCache(cacheKey, {\n          data,\n          params: fetchInstance.state.params,\n          time: new Date().getTime()\n        });\n        // resubscribe\n        unSubscribeRef.current = cacheSubscribe.subscribe(cacheKey, d => {\n          fetchInstance.setState({\n            data: d\n          });\n        });\n      }\n    }\n  };\n};\nexport default useCachePlugin;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
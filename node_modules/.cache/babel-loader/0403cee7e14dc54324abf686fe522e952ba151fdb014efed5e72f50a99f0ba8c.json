{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const fetchPizzas = createAsyncThunk('pizza/fetchPizzasStatus', async params => {\n  const {\n    sortBy,\n    order,\n    category,\n    search,\n    pageCount\n  } = params;\n  const {\n    data\n  } = await axios.get(`http://localhost:3002/pizzas?_page=${pageCount}&_limit=4${category}&_sort=${sortBy}&_order=${order}${search}`);\n  return data;\n});\nvar Status;\n(function (Status) {\n  Status[\"LOADING\"] = \"loading\";\n  Status[\"success\"] = \"success\";\n  Status[\"error\"] = \"error\";\n})(Status || (Status = {}));\nconst initialState = {\n  items: [],\n  status: 'loading' // loading |success | error \n};\n\nconst pizzaSlice = createSlice({\n  name: 'pizza',\n  initialState,\n  reducers: {\n    setItems(state, action) {\n      state.items = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchPizzas.pending, (state, action) => {\n      state.items = [];\n      state.status = 'loading';\n    });\n    builder.addCase(fetchPizzas.fulfilled, (state, action) => {\n      state.items = action.payload;\n      state.status = 'success';\n    });\n    builder.addCase(fetchPizzas.rejected, (state, action) => {\n      state.items = [];\n      state.status = 'error';\n    });\n  }\n  // extraReducers: {\n  // \t[fetchPizzas.pending]:(state)=>{\n  // \t\tstate.items = []\n  // \t\tstate.status = 'loading';\n  // \t},\n  // \t[fetchPizzas.fulfilled]:(state,action)=>{\n  // \t\tstate.items = action.payload;\n  // \t\tstate.status = 'success';\n  // \t},\n  // \t[fetchPizzas.rejected]:(state,action)=>{\n  // \t\tstate.items = []\n  // \t\tstate.status = 'error';\n  // \t}\n  // }\n});\n\nexport const selectPizzaData = state => state.pizzaSlice;\nexport const {\n  setItems\n} = pizzaSlice.actions;\nexport default pizzaSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","fetchPizzas","params","sortBy","order","category","search","pageCount","data","get","Status","initialState","items","status","pizzaSlice","name","reducers","setItems","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","selectPizzaData","actions","reducer"],"sources":["C:/Users/DimaP/Desktop/Проекты/React_handmade/mypizza/src/redux/slice/pizzaSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { RootState } from '../store';\r\n\r\nexport const fetchPizzas = createAsyncThunk<Pizza[],Record<string,number>>('pizza/fetchPizzasStatus', async (params ) => {\r\n\tconst { sortBy, order, category, search,pageCount } = params;\r\n\tconst { data } = await axios.get<Pizza[]>(\r\n\t\t`http://localhost:3002/pizzas?_page=${pageCount}&_limit=4${category}&_sort=${sortBy}&_order=${order}${search}`,\r\n\t);\r\n\treturn data;\r\n});\r\n\r\ntype Pizza  = {\r\n\tid: string;\r\n\timageUrl: string;\r\n\ttitle: string;\r\n\ttypes: number[];\r\n\tsizes: number[];\r\n\tprice: number;\r\n};\r\n\r\nenum Status {\r\n\tLOADING = 'loading',\r\n\tsuccess = 'success',\r\n\terror = 'error',\r\n}\r\n\r\ninterface PizzasSliceState {\r\n\titems: Pizza[];\r\n\tstatus: 'loading' |'success' | 'error' ;\r\n}\r\n\r\n\r\n\r\n\r\nconst initialState:PizzasSliceState = {\r\n\titems: [],\r\n\tstatus: 'loading', // loading |success | error \r\n};\r\n\r\nconst pizzaSlice = createSlice({\r\n\tname: 'pizza',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetItems(state, action:PayloadAction<Pizza[]>) {\r\n\t\t\tstate.items = action.payload;\r\n\t\t},\r\n\t},\r\n\r\n\textraReducers: (builder) =>{\r\n\t\tbuilder.addCase(fetchPizzas.pending, (state, action) =>{\r\n\t\t\tstate.items = []\r\n\t\t\tstate.status = 'loading';\r\n\t\t})\r\n\t\tbuilder.addCase(fetchPizzas.fulfilled, (state, action) =>{\r\n\t\t\tstate.items = action.payload;\r\n\t\t\tstate.status = 'success';\r\n\t\t})\r\n\t\tbuilder.addCase(fetchPizzas.rejected, (state, action) =>{\r\n\t\t\tstate.items = []\r\n\t\t\tstate.status = 'error';\r\n\t\t})\r\n\t}\r\n\t// extraReducers: {\r\n\t// \t[fetchPizzas.pending]:(state)=>{\r\n\t// \t\tstate.items = []\r\n\t// \t\tstate.status = 'loading';\r\n\t// \t},\r\n\t// \t[fetchPizzas.fulfilled]:(state,action)=>{\r\n\t// \t\tstate.items = action.payload;\r\n\t// \t\tstate.status = 'success';\r\n\t// \t},\r\n\t// \t[fetchPizzas.rejected]:(state,action)=>{\r\n\t// \t\tstate.items = []\r\n\t// \t\tstate.status = 'error';\r\n\t// \t}\r\n\t// }\r\n});\r\nexport const selectPizzaData = (state:RootState) => state.pizzaSlice\r\nexport const { setItems } = pizzaSlice.actions;\r\nexport default pizzaSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAuB,kBAAkB;AAC/E,OAAOC,KAAK,MAAM,OAAO;AAGzB,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CAAgC,yBAAyB,EAAE,MAAOI,MAAM,IAAM;EACxH,MAAM;IAAEC,MAAM;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,MAAM;IAACC;EAAU,CAAC,GAAGL,MAAM;EAC5D,MAAM;IAAEM;EAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,GAAG,CAC9B,sCAAqCF,SAAU,YAAWF,QAAS,UAASF,MAAO,WAAUC,KAAM,GAAEE,MAAO,EAAC,CAC9G;EACD,OAAOE,IAAI;AACZ,CAAC,CAAC;AAAC,IAWEE,MAAM;AAAA,WAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;AAAA,GAANA,MAAM,KAANA,MAAM;AAcX,MAAMC,YAA6B,GAAG;EACrCC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,SAAS,CAAE;AACpB,CAAC;;AAED,MAAMC,UAAU,GAAGf,WAAW,CAAC;EAC9BgB,IAAI,EAAE,OAAO;EACbJ,YAAY;EACZK,QAAQ,EAAE;IACTC,QAAQ,CAACC,KAAK,EAAEC,MAA6B,EAAE;MAC9CD,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC7B;EACD,CAAC;EAEDC,aAAa,EAAGC,OAAO,IAAI;IAC1BA,OAAO,CAACC,OAAO,CAACtB,WAAW,CAACuB,OAAO,EAAE,CAACN,KAAK,EAAEC,MAAM,KAAI;MACtDD,KAAK,CAACN,KAAK,GAAG,EAAE;MAChBM,KAAK,CAACL,MAAM,GAAG,SAAS;IACzB,CAAC,CAAC;IACFS,OAAO,CAACC,OAAO,CAACtB,WAAW,CAACwB,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAI;MACxDD,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO;MAC5BF,KAAK,CAACL,MAAM,GAAG,SAAS;IACzB,CAAC,CAAC;IACFS,OAAO,CAACC,OAAO,CAACtB,WAAW,CAACyB,QAAQ,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAI;MACvDD,KAAK,CAACN,KAAK,GAAG,EAAE;MAChBM,KAAK,CAACL,MAAM,GAAG,OAAO;IACvB,CAAC,CAAC;EACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACD,CAAC,CAAC;;AACF,OAAO,MAAMc,eAAe,GAAIT,KAAe,IAAKA,KAAK,CAACJ,UAAU;AACpE,OAAO,MAAM;EAAEG;AAAS,CAAC,GAAGH,UAAU,CAACc,OAAO;AAC9C,eAAed,UAAU,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}